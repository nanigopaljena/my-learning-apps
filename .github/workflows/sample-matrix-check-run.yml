name: Kafka Env Check Matrix

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run (use "all" for both)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - dev
          - test

jobs:
  determine-environments:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Set matrix dynamically
        id: set-matrix
        shell: bash
        run: |
          echo "Selected environment: ${{ github.event.inputs.environment }}"

          if [[ "${{ github.event.inputs.environment }}" == "all" ]]; then
            MATRIX='["dev", "test"]'
          else
            MATRIX='["${{ github.event.inputs.environment }}"]'
          fi

          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  run-checks:
    needs: determine-environments
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: ${{ fromJson(needs.determine-environments.outputs.matrix) }}
    environment: ${{ matrix.environment }}  # üëà Required to access environment-level secrets
    continue-on-error: true
    outputs:
      result: ${{ steps.set-result.outputs.result }}

    env:
      SEC_VALUE: ${{ secrets.MY_TEST_SECRET }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Validate SEC_VALUE
        run: |
          if [ -z "$SEC_VALUE" ]; then
            echo "‚ùå SEC_VALUE secret is not set!"
            exit 1
          fi
          echo "‚úÖ SEC_VALUE=$SEC_VALUE"

      - name: Run Python check for ${{ matrix.environment }}
        id: run-check
        run: |
          echo "Environment: ${{ matrix.environment }}"
          python sample-git-workflow-run/test-script.py "$SEC_VALUE"

      - name: Set result output
        id: set-result
        run: |
          if [ "${{ steps.run-check.outcome }}" == "failure" ]; then
            echo "result=failure" >> $GITHUB_OUTPUT
          else
            echo "result=success" >> $GITHUB_OUTPUT
          fi

  check-results:
    needs: run-checks
    runs-on: ubuntu-latest
    if: always()
    strategy:
      matrix:
        environment: [dev, test] # must match possible matrix values
    steps:
      - name: Fail if any environment failed
        run: |
          echo "üîç Verifying result for environment: ${{ matrix.environment }}"
          result="${{ needs.run-checks.outputs.result }}"
          
          if [[ "$result" == "failure" ]]; then
            echo "‚ùå One or more environments failed."
            exit 1
          else
            echo "‚úÖ All environments passed."
          fi